{"ast":null,"code":"var _jsxFileName = \"/Users/ntf-m6/Desktop/HRMS/frontend/src/components/Hiring.tsx\";\nimport React from \"react\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport './hiring.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Hiring = () => {\n  const body = [{\n    id: 1,\n    heading: \"Available Position\",\n    percentage: 75,\n    colors: \"green\",\n    code: rgb(60, 179, 113),\n    position: 24\n  }, {\n    id: 2,\n    percentage: 90,\n    heading: \"Job Open\",\n    colors: \"red\",\n    position: 10\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: body.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"hiring  card   \",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-body d-flex d-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-75\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: item.heading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: item.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"h-25 w-25\",\n          children: /*#__PURE__*/_jsxDEV(CircularProgressbar, {\n            value: item.percentage,\n            text: `${item.percentage}%`,\n            styles: buildStyles({\n              pathColor: `rgba(255, 0, 0, ${item.percentage / 100})`,\n              textColor: item.colors,\n              trailColor: \"#d6d6d6\"\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this))\n  }, void 0, false);\n};\n_c = Hiring;\nexport default Hiring;\nvar _c;\n$RefreshReg$(_c, \"Hiring\");","map":{"version":3,"names":["React","CircularProgressbar","buildStyles","jsxDEV","_jsxDEV","Fragment","_Fragment","Hiring","body","id","heading","percentage","colors","code","rgb","position","children","map","item","className","fileName","_jsxFileName","lineNumber","columnNumber","value","text","styles","pathColor","textColor","trailColor","_c","$RefreshReg$"],"sources":["/Users/ntf-m6/Desktop/HRMS/frontend/src/components/Hiring.tsx"],"sourcesContent":["import React from \"react\";\nimport \"react-circular-progressbar/dist/styles.css\";\nimport { CircularProgressbar, buildStyles } from 'react-circular-progressbar';\nimport './hiring.css'\nimport imagePath from \"../constants/imagePath\";\nimport colors from \"../style/colors\";\nconst Hiring = () => {\n  const body = [\n    {\n      id: 1,\n      heading: \"Available Position\",\n      percentage:75,\n      colors:\"green\",\n      code:rgb(60, 179, 113),\n      position: 24\n    },\n    {\n      id: 2,\n      percentage:90,\n      heading: \"Job Open\",\n      colors:\"red\",\n      position: 10,\n    }\n  ];\n  return (<>\n    {body.map((item)=><div  className=\"hiring  card   \">\n      <div  className=\"card-body d-flex d-row\">\n        <div className=\"w-75\">\n        <h6>{item.heading}</h6>\n        <h3>{item.position}</h3>\n        </div>\n        <div className=\"h-25 w-25\">\n        <CircularProgressbar\n                      value={item.percentage}\n                      text={`${item.percentage}%`}\n                      styles={buildStyles({\n                        pathColor: `rgba(255, 0, 0, ${item.percentage / 100})`,\n                        textColor: item.colors,\n                        trailColor: \"#d6d6d6\",\n                      })}\n                    />\n            \n        </div>\n        </div>\n     </div>)\n    }\n     \n  </>);\n};\n\nexport default Hiring;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,4CAA4C;AACnD,SAASC,mBAAmB,EAAEC,WAAW,QAAQ,4BAA4B;AAC7E,OAAO,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAGrB,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACnB,MAAMC,IAAI,GAAG,CACX;IACEC,EAAE,EAAE,CAAC;IACLC,OAAO,EAAE,oBAAoB;IAC7BC,UAAU,EAAC,EAAE;IACbC,MAAM,EAAC,OAAO;IACdC,IAAI,EAACC,GAAG,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;IACtBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACEN,EAAE,EAAE,CAAC;IACLE,UAAU,EAAC,EAAE;IACbD,OAAO,EAAE,UAAU;IACnBE,MAAM,EAAC,KAAK;IACZG,QAAQ,EAAE;EACZ,CAAC,CACF;EACD,oBAAQX,OAAA,CAAAE,SAAA;IAAAU,QAAA,EACLR,IAAI,CAACS,GAAG,CAAEC,IAAI,iBAAGd,OAAA;MAAMe,SAAS,EAAC,iBAAiB;MAAAH,QAAA,eACjDZ,OAAA;QAAMe,SAAS,EAAC,wBAAwB;QAAAH,QAAA,gBACtCZ,OAAA;UAAKe,SAAS,EAAC,MAAM;UAAAH,QAAA,gBACrBZ,OAAA;YAAAY,QAAA,EAAKE,IAAI,CAACR;UAAO;YAAAU,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvBnB,OAAA;YAAAY,QAAA,EAAKE,IAAI,CAACH;UAAQ;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnB,CAAC,eACNnB,OAAA;UAAKe,SAAS,EAAC,WAAW;UAAAH,QAAA,eAC1BZ,OAAA,CAACH,mBAAmB;YACNuB,KAAK,EAAEN,IAAI,CAACP,UAAW;YACvBc,IAAI,EAAE,GAAGP,IAAI,CAACP,UAAU,GAAI;YAC5Be,MAAM,EAAExB,WAAW,CAAC;cAClByB,SAAS,EAAE,mBAAmBT,IAAI,CAACP,UAAU,GAAG,GAAG,GAAG;cACtDiB,SAAS,EAAEV,IAAI,CAACN,MAAM;cACtBiB,UAAU,EAAE;YACd,CAAC;UAAE;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAET,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAC,gBAGR,CAAC;AACL,CAAC;AAACO,EAAA,GA1CIvB,MAAM;AA4CZ,eAAeA,MAAM;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}