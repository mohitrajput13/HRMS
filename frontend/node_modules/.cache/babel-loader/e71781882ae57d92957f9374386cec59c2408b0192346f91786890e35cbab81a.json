{"ast":null,"code":"var _jsxFileName = \"/Users/ntf-m6/Desktop/HRMS/frontend/src/page/Attendance/AttendanceSheet.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./attendence.css\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AttendanceSheet = () => {\n  _s();\n  const [eid, setEid] = useState(\"\");\n  const [attendance, setAttendance] = useState([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [isAbsent, setIsAbsent] = useState(null);\n  const [allEmployees, setAllEmployees] = useState([]);\n  const [allAttendanceData, setAllAttendanceData] = useState([]);\n  const options = {\n    day: \"numeric\",\n    month: \"long\",\n    year: \"numeric\"\n  };\n  const date = new Date(startDate).toLocaleDateString(\"en-US\", options);\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const maxDate = new Date(currentYear, today.getMonth() + 1, 0);\n  const formattedDate = today.toLocaleDateString(\"en-US\", options);\n  const currentDate = today.toLocaleDateString(\"en-GB\", {\n    day: \"numeric\",\n    month: \"long\"\n  });\n  const monthYearString = new Date(startDate).toLocaleString(\"default\", {\n    month: \"long\"\n  });\n  const numberOfDaysInMonth = new Date(startDate.getFullYear(), startDate.getMonth() + 1, 0).getDate();\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/getAllEmployee\");\n        const result = await response.json();\n        setAllEmployees(result.user);\n      } catch (error) {\n        console.error(\"Error fetching data: \", error);\n      }\n    };\n    const getCurrentDateData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/getCurrentDateattendance?date=${currentDate}`);\n        const result = await response.json();\n        setAttendance(result.data);\n      } catch (error) {\n        console.error(\"Error fetching data: \", error);\n      }\n    };\n    fetchData();\n    getCurrentDateData();\n  }, [currentDate]);\n  useEffect(() => {\n    const getAllAttendanceData = async () => {\n      try {\n        if (eid) {\n          const response = await fetch(`http://localhost:8080/getallattendance?eid=${eid}`);\n          const result = await response.json();\n          setAllAttendanceData(result.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data: \", error);\n      }\n    };\n    getAllAttendanceData();\n  }, [eid]);\n  const setAttendanceData = async attendanceRecord => {\n    try {\n      await axios.post(\"http://localhost:8080/addAttendance\", attendanceRecord);\n    } catch (error) {\n      console.error(\"Error posting attendance data: \", error);\n    }\n  };\n  const setAttendance1 = (eid, attendanceStatus, status) => {\n    const updatedAttendance = attendance.map(att => att.eid === eid && att.date === currentDate ? {\n      ...att,\n      attendance: attendanceStatus,\n      status: status\n    } : att);\n    const existingAttendance = attendance.find(att => att.eid === eid && att.date === currentDate);\n    if (attendanceStatus === \"absent\") {\n      setAttendanceData({\n        eid,\n        attendance: attendanceStatus,\n        date: currentDate,\n        status\n      });\n      setIsAbsent(eid);\n    } else {\n      setIsAbsent(null);\n    }\n    if (!existingAttendance) {\n      setAttendance([...attendance, {\n        eid,\n        attendance: attendanceStatus,\n        date: currentDate,\n        status\n      }]);\n    } else {\n      setAttendance(updatedAttendance);\n      setAttendanceData({\n        eid,\n        attendance: attendanceStatus,\n        date: currentDate,\n        status\n      });\n    }\n  };\n  const monthDays = Array.from({\n    length: numberOfDaysInMonth\n  }, (_, i) => `${i + 1} ${monthYearString}`);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex p-3 flex-column\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex flex-row mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-75\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: formattedDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center\",\n        style: {\n          width: \"220px\"\n        },\n        children: /*#__PURE__*/_jsxDEV(DatePicker, {\n          selected: startDate,\n          onChange: date => setStartDate(date),\n          dateFormat: \"MMMM yyyy\",\n          showMonthYearPicker: true,\n          monthsShown: 1,\n          className: \"form-control\",\n          maxDate: maxDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100\",\n      style: {\n        overflowX: formattedDate !== date ? \"auto\" : \"clip\"\n      },\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-responsive\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: \"140px\"\n              },\n              children: \"Eid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: \"140px\"\n              },\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: \"140px\"\n              },\n              children: \"D.O.B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: \"140px\"\n              },\n              children: \"D.O.J\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 15\n            }, this), monthDays.map(day => /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: \"140px\"\n              },\n              children: day\n            }, day, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: allEmployees.length > 0 && allEmployees.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: \"140px\"\n              },\n              children: item.eid\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: \"140px\"\n              },\n              children: item.firstname\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: \"140px\"\n              },\n              children: item.dob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              style: {\n                minWidth: \"140px\"\n              },\n              children: item.doj\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), monthDays.map(day => {\n              const attendanceForDay = allAttendanceData.find(data => data.date === day && item.eid === data.eid);\n              return /*#__PURE__*/_jsxDEV(\"td\", {\n                className: `width ${attendanceForDay ? attendanceForDay.status === \"full day\" ? \"text-success\" : attendanceForDay.status === \"half day\" ? \"text-warning\" : attendanceForDay.status === \"early leave\" ? \"text-primary\" : \"text-danger\" : \"\"}`,\n                children: attendanceForDay ? attendanceForDay.attendance === \"present\" ? \"P\" : \"A\" : \"\"\n              }, `${item.eid}-${day}`, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 23\n              }, this);\n            })]\n          }, item.eid, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n};\n_s(AttendanceSheet, \"o4cKt03J7CP6jSJTjJKgvN7CczU=\");\n_c = AttendanceSheet;\nexport default AttendanceSheet;\n\n// import React, { useEffect, useState } from \"react\";\n// import \"./attendence.css\";\n// import ButtonField from \"../../components/ButtonField\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import axios from \"axios\";\n// import { log } from \"console\";\n\n// const AttendanceSheet = () => {\n//   const [attendance, setAttendance] = useState<any>([]);\n//   const [startDate, setStartDate] = useState(new Date());\n//   const [isAbsent, setIsAbsent] = useState<string | null>(null);\n//   const [allEmployees, setAllEmployees] = useState<any>([]);\n//   const [allAttendanceData, setAllAttendanceData] = useState<any>();\n//   const options: any = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n//   const date = new Date(startDate).toLocaleDateString(\"en-US\", options);\n//   const today = new Date();\n//   const currentYear = today.getFullYear();\n//   const maxDate = new Date(currentYear, today.getMonth() + 1, 0);\n//   const formattedDate = today.toLocaleDateString(\"en-US\", { day: \"numeric\", month: \"long\", year: \"numeric\" });\n//   const currentDate = today.toLocaleDateString('en-GB', { day: 'numeric', month: 'long' })\n//   const monthYearString = new Date(startDate).toLocaleString(\"default\", { month: \"long\" });\n//   const numberOfDaysInMonth = new Date(\n//     startDate.getFullYear(),\n//     startDate.getMonth() + 1,\n//     0\n//   ).getDate();\n//   const getAllAttendanceData = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/getallattendance\");\n//       const result = await response.json();\n//       setAllAttendanceData(result.data);\n//     } catch (error) {\n//       console.error(\"Error fetching data: \", error);\n//     }\n//   }\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/getAllEmployee\");\n//       const result = await response.json();\n//       setAllEmployees(result);\n//     } catch (error) {\n//       console.error(\"Error fetching data: \", error);\n//     }\n//   };\n//   const getCurrentDateData = async (item: any) => {\n//     try {\n//       const requestOptions: any = {\n//         method: \"GET\",\n//       };\n\n//       fetch(`http://localhost:8080/getCurrentDateattendance?date=${currentDate}`, requestOptions)\n//         .then((response) => response.json())\n//         .then((result) => {\n//           setAttendance(result.data)\n//           console.log(\">>>>>>>>\", result)\n//         })\n//         .catch((error) => console.error(error));\n//     } catch (error) {\n//       console.error(\"Error fetching data: \", error);\n//     }\n//   }\n//   useEffect(() => {\n//     getAllAttendanceData();\n//     getCurrentDateData({ date: currentDate });\n//     fetchData();\n//   }, []);\n\n//   const isPastDate = (dateString: string) => {\n//     const inputDate = new Date(`${dateString} ${currentYear}`);\n//     inputDate.setHours(0, 0, 0, 0);\n//     today.setHours(0, 0, 0, 0);\n\n//     return inputDate <= today;\n//   };\n\n//   const setAttendanceData = async (attendanceRecord: any) => {\n//     try {\n//       console.log(attendanceRecord);\n\n//       let response = await axios.post(\"http://localhost:8080/addAttendance\", attendanceRecord);\n//       console.log(response);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const setAttendance1 = (eid: string, attendanceStatus: string, status: string) => {\n//     const updatedAttendance = attendance.map((att: any) =>\n//       att.eid === eid && att.date === currentDate\n//         ? { ...att, attendance: attendanceStatus, status: status }\n//         : att\n//     );\n\n//     const existingAttendance = attendance.find(\n//       (att: any) => att.eid === eid && att.date === currentDate\n//     );\n\n//     if (attendanceStatus === \"absent\") {\n\n//       setAttendanceData({ eid, attendance: attendanceStatus, date: currentDate, status });\n//       setIsAbsent(eid);\n//     } else {\n//       setIsAbsent(null);\n//     }\n\n//     if (!existingAttendance) {\n//       setAttendance([\n//         ...attendance,\n//         { eid, attendance: attendanceStatus, date: currentDate, status }\n//       ]);\n//     } else {\n//       setAttendance(updatedAttendance);\n//       setAttendanceData({ eid, attendance: attendanceStatus, date: currentDate, status });\n//     }\n//   };\n\n//   const monthDays = Array.from(\n//     { length: numberOfDaysInMonth },\n//     (_, i) => `${i + 1} ${monthYearString}`\n//   );\n\n//   return (\n//     <>\n//       <div className=\"d-flex p-3 flex-column\">\n//         <div className=\"d-flex flex-row mb-3\">\n//           <div className=\"w-75\">\n//             <p>{formattedDate}</p>\n//           </div>\n//           <div className=\"center\" style={{ width: \"220px\" }}>\n//             <DatePicker\n//               selected={startDate}\n//               onChange={(date: any) => setStartDate(date)}\n//               dateFormat=\"MMMM yyyy\"\n//               showMonthYearPicker\n//               monthsShown={1}\n//               className=\"form-control\"\n//               maxDate={maxDate}\n//             />\n//           </div>\n\n//         </div>\n//         <div\n//           className=\"w-100\"\n//           style={{ overflowX: formattedDate !== date ? \"auto\" : \"clip\" }}\n//         >\n//           <table className=\"table table-responsive\">\n//             <thead>\n//               <tr>\n//                 <th style={{ minWidth: \"140px\" }}>Eid</th>\n//                 <th style={{ minWidth: \"140px\" }}>Name</th>\n//                 <th style={{ minWidth: \"140px\" }}>D.O.B</th>\n//                 <th style={{ minWidth: \"140px\" }}>D.O.J</th>\n//                 {formattedDate === date ? (\n//                   <th style={{ minWidth: \"140px\" }}>Attendance</th>\n//                 ) : (\n//                   monthDays.map((day: string) =>\n//                     isPastDate(day) ? (\n//                       <th style={{ minWidth: \"140px\" }} key={day}>\n//                         {day}\n//                       </th>\n//                     ) : null\n//                   )\n//                 )}\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {allEmployees.user &&\n//                 allEmployees.user.map((item: any) => (\n//                   <tr key={item.eid}>\n//                     <th style={{ minWidth: \"140px\" }}>{item.eid}</th>\n//                     <th style={{ minWidth: \"140px\" }}>{item.firstname}</th>\n//                     <th style={{ minWidth: \"140px\" }}>{item.dob}</th>\n//                     <th style={{ minWidth: \"140px\" }}>{item.doj}</th>\n//                     {formattedDate === date ? (\n//                       <td className={`width`}>\n//                         {attendance.some(\n//                           (att: any) =>\n//                             att.eid === item._id && att.date === currentDate\n//                         ) ? (\n//                           <span\n//                             className={\n//                               attendance.find(\n//                                 (att: any) =>\n//                                   att.eid === item._id &&\n//                                   att.date === currentDate\n//                               )?.attendance === \"present\"\n//                                 ? \"text-success\"\n//                                 : \"text-danger\"\n//                             }\n//                           >\n//                             {\n//                               attendance.find(\n//                                 (att: any) =>\n//                                   att.eid === item._id &&\n//                                   att.date === currentDate\n//                               )?.attendance\n//                             }\n//                           </span>\n//                         ) : (\n//                           <div>\n//                             <ButtonField\n//                               label=\"Absent\"\n//                               onClick={() => {\n//                                 setAttendance1(item._id, \"absent\", \"false\");\n//                               }}\n//                               classname={\"btn btn-outline-danger \"}\n//                             />\n//                             <ButtonField\n//                               label=\"Present\"\n//                               onClick={() => {\n//                                 setAttendance1(item._id, \"present\", \"\");\n//                               }}\n//                               classname={\"btn btn-success ms-2\"}\n//                             />\n//                           </div>\n//                         )}\n//                       </td>\n//                     ) : (\n//                       allAttendanceData.map((data: any) => (\n//                         monthDays.map((day: string) => (\n//                           data.date == day && item._id == data.eid ?\n//                             <td className={`width ${data.status == \"full day\" ? 'text-success' : data.status == \"half day\" ? 'text-warning' : data.status == \"early day\" ? 'text-primary' : 'text-danger'}`}>{data.attendance == \"present\" ? 'P' : 'A'}</td> : ''))))\n//                     )}\n//                     {formattedDate === date && (\n//                       <td className=\"text-center\">\n//                         <div className=\"dropdown\">\n//                           <button className=\"dropbtn btn btn-light\">\n//                             <i className=\"fa fa-ellipsis-v\"></i>\n//                           </button>\n//                           <div className=\"dropdown-content\">\n//                             <ButtonField\n//                               classname={\"bg-light text-dark\"}\n//                               onClick={() =>\n//                                 setAttendance1(item._id, \"present\", \"full day\")\n//                               }\n//                               label=\"Full Day\"\n//                               disabled={isAbsent === item._id}\n//                             />\n//                             <ButtonField\n//                               classname={\"bg-light text-dark my-1\"}\n//                               onClick={() =>\n//                                 setAttendance1(item._id, \"present\", \"half day\")\n//                               }\n//                               label=\"Half Day\"\n//                               disabled={isAbsent === item._id}\n//                             />\n//                             <ButtonField\n//                               classname={\"bg-light text-dark \"}\n//                               onClick={() =>\n//                                 setAttendance1(\n//                                   item._id,\n//                                   \"Present\",\n//                                   \"early day\"\n//                                 )\n//                               }\n//                               label=\"Early Leave\"\n//                               disabled={isAbsent === item._id}\n//                             />\n//                           </div>\n//                         </div>\n//                       </td>\n//                     )}\n//                   </tr>\n//                 ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default AttendanceSheet;\nvar _c;\n$RefreshReg$(_c, \"AttendanceSheet\");","map":{"version":3,"names":["React","useEffect","useState","DatePicker","axios","jsxDEV","_jsxDEV","AttendanceSheet","_s","eid","setEid","attendance","setAttendance","startDate","setStartDate","Date","isAbsent","setIsAbsent","allEmployees","setAllEmployees","allAttendanceData","setAllAttendanceData","options","day","month","year","date","toLocaleDateString","today","currentYear","getFullYear","maxDate","getMonth","formattedDate","currentDate","monthYearString","toLocaleString","numberOfDaysInMonth","getDate","fetchData","response","fetch","result","json","user","error","console","getCurrentDateData","data","getAllAttendanceData","setAttendanceData","attendanceRecord","post","setAttendance1","attendanceStatus","status","updatedAttendance","map","att","existingAttendance","find","monthDays","Array","from","length","_","i","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","width","selected","onChange","dateFormat","showMonthYearPicker","monthsShown","overflowX","minWidth","item","firstname","dob","doj","attendanceForDay","_c","$RefreshReg$"],"sources":["/Users/ntf-m6/Desktop/HRMS/frontend/src/page/Attendance/AttendanceSheet.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./attendence.css\";\nimport ButtonField from \"../../components/ButtonField\";\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport axios from \"axios\";\n\nconst AttendanceSheet = () => {\n  const [eid, setEid] = useState<string>(\"\");\n  const [attendance, setAttendance] = useState<any[]>([]);\n  const [startDate, setStartDate] = useState(new Date());\n  const [isAbsent, setIsAbsent] = useState<string | null>(null);\n  const [allEmployees, setAllEmployees] = useState<any[]>([]);\n  const [allAttendanceData, setAllAttendanceData] = useState<any[]>([]);\n\n  const options: any = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n  const date = new Date(startDate).toLocaleDateString(\"en-US\", options);\n  const today = new Date();\n  const currentYear = today.getFullYear();\n  const maxDate = new Date(currentYear, today.getMonth() + 1, 0);\n  const formattedDate = today.toLocaleDateString(\"en-US\", options);\n  const currentDate = today.toLocaleDateString(\"en-GB\", { day: \"numeric\", month: \"long\" });\n  const monthYearString = new Date(startDate).toLocaleString(\"default\", { month: \"long\" });\n  const numberOfDaysInMonth = new Date(startDate.getFullYear(), startDate.getMonth() + 1, 0).getDate();\n  \n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8080/getAllEmployee\");\n        const result = await response.json();\n        setAllEmployees(result.user);\n      } catch (error) {\n        console.error(\"Error fetching data: \", error);\n      }\n    };\n\n    const getCurrentDateData = async () => {\n      try {\n        const response = await fetch(`http://localhost:8080/getCurrentDateattendance?date=${currentDate}`);\n        const result = await response.json();\n        setAttendance(result.data);\n      } catch (error) {\n        console.error(\"Error fetching data: \", error);\n      }\n    };\n\n    fetchData();\n    getCurrentDateData();\n  }, [currentDate]);\n\n  useEffect(() => {\n    const getAllAttendanceData = async () => {\n      try {\n        if (eid) {\n          const response = await fetch(`http://localhost:8080/getallattendance?eid=${eid}`);\n          const result = await response.json();\n          setAllAttendanceData(result.data);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data: \", error);\n      }\n    };\n\n    getAllAttendanceData();\n  }, [eid]);\n\n  const setAttendanceData = async (attendanceRecord: any) => {\n    try {\n      await axios.post(\"http://localhost:8080/addAttendance\", attendanceRecord);\n    } catch (error) {\n      console.error(\"Error posting attendance data: \", error);\n    }\n  };\n\n  const setAttendance1 = (eid: string, attendanceStatus: string, status: string) => {\n    const updatedAttendance = attendance.map((att: any) =>\n      att.eid === eid && att.date === currentDate\n        ? { ...att, attendance: attendanceStatus, status: status }\n        : att\n    );\n\n    const existingAttendance = attendance.find(\n      (att: any) => att.eid === eid && att.date === currentDate\n    );\n\n    if (attendanceStatus === \"absent\") {\n      setAttendanceData({ eid, attendance: attendanceStatus, date: currentDate, status });\n      setIsAbsent(eid);\n    } else {\n      setIsAbsent(null);\n    }\n\n    if (!existingAttendance) {\n      setAttendance([...attendance, { eid, attendance: attendanceStatus, date: currentDate, status }]);\n    } else {\n      setAttendance(updatedAttendance);\n      setAttendanceData({ eid, attendance: attendanceStatus, date: currentDate, status });\n    }\n  };\n\n  const monthDays = Array.from(\n    { length: numberOfDaysInMonth },\n    (_, i) => `${i + 1} ${monthYearString}`\n  );\n\n  return (\n    <div className=\"d-flex p-3 flex-column\">\n      <div className=\"d-flex flex-row mb-3\">\n        <div className=\"w-75\">\n          <p>{formattedDate}</p>\n        </div>\n        <div className=\"center\" style={{ width: \"220px\" }}>\n          <DatePicker\n            selected={startDate}\n            onChange={(date: any) => setStartDate(date)}\n            dateFormat=\"MMMM yyyy\"\n            showMonthYearPicker\n            monthsShown={1}\n            className=\"form-control\"\n            maxDate={maxDate}\n          />\n        </div>\n      </div>\n      <div\n        className=\"w-100\"\n        style={{ overflowX: formattedDate !== date ? \"auto\" : \"clip\" }}\n      >\n        <table className=\"table table-responsive\">\n          <thead>\n            <tr>\n              <th style={{ minWidth: \"140px\" }}>Eid</th>\n              <th style={{ minWidth: \"140px\" }}>Name</th>\n              <th style={{ minWidth: \"140px\" }}>D.O.B</th>\n              <th style={{ minWidth: \"140px\" }}>D.O.J</th>\n              {monthDays.map((day: string) => (\n                <th style={{ minWidth: \"140px\" }} key={day}>\n                  {day}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {allEmployees.length > 0 &&\n              allEmployees.map((item: any) => (\n                <tr key={item.eid}>\n                  <th style={{ minWidth: \"140px\" }}>{item.eid}</th>\n                  <th style={{ minWidth: \"140px\" }}>{item.firstname}</th>\n                  <th style={{ minWidth: \"140px\" }}>{item.dob}</th>\n                  <th style={{ minWidth: \"140px\" }}>{item.doj}</th>\n                  {monthDays.map((day: string) => {\n                    const attendanceForDay = allAttendanceData.find(\n                      (data: any) => data.date === day && item.eid === data.eid\n                    );\n                    return (\n                      <td\n                        key={`${item.eid}-${day}`}\n                        className={`width ${\n                          attendanceForDay\n                            ? attendanceForDay.status === \"full day\"\n                              ? \"text-success\"\n                              : attendanceForDay.status === \"half day\"\n                              ? \"text-warning\"\n                              : attendanceForDay.status === \"early leave\"\n                              ? \"text-primary\"\n                              : \"text-danger\"\n                            : \"\"\n                        }`}\n                      >\n                        {attendanceForDay ? (attendanceForDay.attendance === \"present\" ? \"P\" : \"A\") : \"\"}\n                      </td>\n                    );\n                  })}\n                </tr>\n              ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default AttendanceSheet;\n\n// import React, { useEffect, useState } from \"react\";\n// import \"./attendence.css\";\n// import ButtonField from \"../../components/ButtonField\";\n// import DatePicker from \"react-datepicker\";\n// import \"react-datepicker/dist/react-datepicker.css\";\n// import axios from \"axios\";\n// import { log } from \"console\";\n\n// const AttendanceSheet = () => {\n//   const [attendance, setAttendance] = useState<any>([]);\n//   const [startDate, setStartDate] = useState(new Date());\n//   const [isAbsent, setIsAbsent] = useState<string | null>(null);\n//   const [allEmployees, setAllEmployees] = useState<any>([]);\n//   const [allAttendanceData, setAllAttendanceData] = useState<any>();\n//   const options: any = { day: \"numeric\", month: \"long\", year: \"numeric\" };\n//   const date = new Date(startDate).toLocaleDateString(\"en-US\", options);\n//   const today = new Date();\n//   const currentYear = today.getFullYear();\n//   const maxDate = new Date(currentYear, today.getMonth() + 1, 0);\n//   const formattedDate = today.toLocaleDateString(\"en-US\", { day: \"numeric\", month: \"long\", year: \"numeric\" });\n//   const currentDate = today.toLocaleDateString('en-GB', { day: 'numeric', month: 'long' })\n//   const monthYearString = new Date(startDate).toLocaleString(\"default\", { month: \"long\" });\n//   const numberOfDaysInMonth = new Date(\n//     startDate.getFullYear(),\n//     startDate.getMonth() + 1,\n//     0\n//   ).getDate();\n//   const getAllAttendanceData = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/getallattendance\");\n//       const result = await response.json();\n//       setAllAttendanceData(result.data);\n//     } catch (error) {\n//       console.error(\"Error fetching data: \", error);\n//     }\n//   }\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(\"http://localhost:8080/getAllEmployee\");\n//       const result = await response.json();\n//       setAllEmployees(result);\n//     } catch (error) {\n//       console.error(\"Error fetching data: \", error);\n//     }\n//   };\n//   const getCurrentDateData = async (item: any) => {\n//     try {\n//       const requestOptions: any = {\n//         method: \"GET\",\n//       };\n\n//       fetch(`http://localhost:8080/getCurrentDateattendance?date=${currentDate}`, requestOptions)\n//         .then((response) => response.json())\n//         .then((result) => {\n//           setAttendance(result.data)\n//           console.log(\">>>>>>>>\", result)\n//         })\n//         .catch((error) => console.error(error));\n//     } catch (error) {\n//       console.error(\"Error fetching data: \", error);\n//     }\n//   }\n//   useEffect(() => {\n//     getAllAttendanceData();\n//     getCurrentDateData({ date: currentDate });\n//     fetchData();\n//   }, []);\n\n//   const isPastDate = (dateString: string) => {\n//     const inputDate = new Date(`${dateString} ${currentYear}`);\n//     inputDate.setHours(0, 0, 0, 0);\n//     today.setHours(0, 0, 0, 0);\n\n//     return inputDate <= today;\n//   };\n\n//   const setAttendanceData = async (attendanceRecord: any) => {\n//     try {\n//       console.log(attendanceRecord);\n\n//       let response = await axios.post(\"http://localhost:8080/addAttendance\", attendanceRecord);\n//       console.log(response);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const setAttendance1 = (eid: string, attendanceStatus: string, status: string) => {\n//     const updatedAttendance = attendance.map((att: any) =>\n//       att.eid === eid && att.date === currentDate\n//         ? { ...att, attendance: attendanceStatus, status: status }\n//         : att\n//     );\n\n//     const existingAttendance = attendance.find(\n//       (att: any) => att.eid === eid && att.date === currentDate\n//     );\n\n//     if (attendanceStatus === \"absent\") {\n\n//       setAttendanceData({ eid, attendance: attendanceStatus, date: currentDate, status });\n//       setIsAbsent(eid);\n//     } else {\n//       setIsAbsent(null);\n//     }\n\n//     if (!existingAttendance) {\n//       setAttendance([\n//         ...attendance,\n//         { eid, attendance: attendanceStatus, date: currentDate, status }\n//       ]);\n//     } else {\n//       setAttendance(updatedAttendance);\n//       setAttendanceData({ eid, attendance: attendanceStatus, date: currentDate, status });\n//     }\n//   };\n\n//   const monthDays = Array.from(\n//     { length: numberOfDaysInMonth },\n//     (_, i) => `${i + 1} ${monthYearString}`\n//   );\n\n//   return (\n//     <>\n//       <div className=\"d-flex p-3 flex-column\">\n//         <div className=\"d-flex flex-row mb-3\">\n//           <div className=\"w-75\">\n//             <p>{formattedDate}</p>\n//           </div>\n//           <div className=\"center\" style={{ width: \"220px\" }}>\n//             <DatePicker\n//               selected={startDate}\n//               onChange={(date: any) => setStartDate(date)}\n//               dateFormat=\"MMMM yyyy\"\n//               showMonthYearPicker\n//               monthsShown={1}\n//               className=\"form-control\"\n//               maxDate={maxDate}\n//             />\n//           </div>\n          \n//         </div>\n//         <div\n//           className=\"w-100\"\n//           style={{ overflowX: formattedDate !== date ? \"auto\" : \"clip\" }}\n//         >\n//           <table className=\"table table-responsive\">\n//             <thead>\n//               <tr>\n//                 <th style={{ minWidth: \"140px\" }}>Eid</th>\n//                 <th style={{ minWidth: \"140px\" }}>Name</th>\n//                 <th style={{ minWidth: \"140px\" }}>D.O.B</th>\n//                 <th style={{ minWidth: \"140px\" }}>D.O.J</th>\n//                 {formattedDate === date ? (\n//                   <th style={{ minWidth: \"140px\" }}>Attendance</th>\n//                 ) : (\n//                   monthDays.map((day: string) =>\n//                     isPastDate(day) ? (\n//                       <th style={{ minWidth: \"140px\" }} key={day}>\n//                         {day}\n//                       </th>\n//                     ) : null\n//                   )\n//                 )}\n//               </tr>\n//             </thead>\n//             <tbody>\n//               {allEmployees.user &&\n//                 allEmployees.user.map((item: any) => (\n//                   <tr key={item.eid}>\n//                     <th style={{ minWidth: \"140px\" }}>{item.eid}</th>\n//                     <th style={{ minWidth: \"140px\" }}>{item.firstname}</th>\n//                     <th style={{ minWidth: \"140px\" }}>{item.dob}</th>\n//                     <th style={{ minWidth: \"140px\" }}>{item.doj}</th>\n//                     {formattedDate === date ? (\n//                       <td className={`width`}>\n//                         {attendance.some(\n//                           (att: any) =>\n//                             att.eid === item._id && att.date === currentDate\n//                         ) ? (\n//                           <span\n//                             className={\n//                               attendance.find(\n//                                 (att: any) =>\n//                                   att.eid === item._id &&\n//                                   att.date === currentDate\n//                               )?.attendance === \"present\"\n//                                 ? \"text-success\"\n//                                 : \"text-danger\"\n//                             }\n//                           >\n//                             {\n//                               attendance.find(\n//                                 (att: any) =>\n//                                   att.eid === item._id &&\n//                                   att.date === currentDate\n//                               )?.attendance\n//                             }\n//                           </span>\n//                         ) : (\n//                           <div>\n//                             <ButtonField\n//                               label=\"Absent\"\n//                               onClick={() => {\n//                                 setAttendance1(item._id, \"absent\", \"false\");\n//                               }}\n//                               classname={\"btn btn-outline-danger \"}\n//                             />\n//                             <ButtonField\n//                               label=\"Present\"\n//                               onClick={() => {\n//                                 setAttendance1(item._id, \"present\", \"\");\n//                               }}\n//                               classname={\"btn btn-success ms-2\"}\n//                             />\n//                           </div>\n//                         )}\n//                       </td>\n//                     ) : (\n//                       allAttendanceData.map((data: any) => (\n//                         monthDays.map((day: string) => (\n//                           data.date == day && item._id == data.eid ?\n//                             <td className={`width ${data.status == \"full day\" ? 'text-success' : data.status == \"half day\" ? 'text-warning' : data.status == \"early day\" ? 'text-primary' : 'text-danger'}`}>{data.attendance == \"present\" ? 'P' : 'A'}</td> : ''))))\n//                     )}\n//                     {formattedDate === date && (\n//                       <td className=\"text-center\">\n//                         <div className=\"dropdown\">\n//                           <button className=\"dropbtn btn btn-light\">\n//                             <i className=\"fa fa-ellipsis-v\"></i>\n//                           </button>\n//                           <div className=\"dropdown-content\">\n//                             <ButtonField\n//                               classname={\"bg-light text-dark\"}\n//                               onClick={() =>\n//                                 setAttendance1(item._id, \"present\", \"full day\")\n//                               }\n//                               label=\"Full Day\"\n//                               disabled={isAbsent === item._id}\n//                             />\n//                             <ButtonField\n//                               classname={\"bg-light text-dark my-1\"}\n//                               onClick={() =>\n//                                 setAttendance1(item._id, \"present\", \"half day\")\n//                               }\n//                               label=\"Half Day\"\n//                               disabled={isAbsent === item._id}\n//                             />\n//                             <ButtonField\n//                               classname={\"bg-light text-dark \"}\n//                               onClick={() =>\n//                                 setAttendance1(\n//                                   item._id,\n//                                   \"Present\",\n//                                   \"early day\"\n//                                 )\n//                               }\n//                               label=\"Early Leave\"\n//                               disabled={isAbsent === item._id}\n//                             />\n//                           </div>\n//                         </div>\n//                       </td>\n//                     )}\n//                   </tr>\n//                 ))}\n//             </tbody>\n//           </table>\n//         </div>\n//       </div>\n//     </>\n//   );\n// };\n\n// export default AttendanceSheet;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}